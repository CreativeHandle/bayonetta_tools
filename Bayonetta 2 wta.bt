BigEndian();

struct {
    char    id[4]; //WTB\0
    int32   unknown;
    int32   numTex;
    uint32  offsetTextureOffsets;
    uint32  offsetTextureSizes;
    uint32  offsetTextureFlags; //0x20000000 alpha, 0x10000000 1bit alpha
    uint32  offsetTextureIdx;
    uint32  offsetTextureInfo;
    uint32  offsetUnknown;
} header;

FSeek( header.offsetTextureOffsets );
uint32  textureOffsets[header.numTex];

FSeek( header.offsetTextureSizes );
int32  textureSizes[header.numTex];

FSeek( header.offsetTextureFlags );
uint32  textureFlags[header.numTex];

FSeek( header.offsetTextureIdx );
uint32  textureIdx[header.numTex];

local int i;
for ( i = 0; i < header.numTex; i++) {
    FSeek( header.offsetTextureInfo + i*0xc0 );
    struct {
        byte data[0x9c];
    } textureInfo;
}

FSeek( header.offsetUnknown );
struct {
    int16 datum0;
    int16 datum1;
} unknownData[header.numTex];
