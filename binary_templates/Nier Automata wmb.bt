#define game 0;

typedef struct {
    uchar   nx<read=normalRead>;
    uchar   ny<read=normalRead>;
    uchar   nz<read=normalRead>;
    byte   dummy;
} normals_t<read=normals_tRead>;

string normalRead( uchar val ) {
    string s;
    SPrintf(s, "%f", (val*2 - 255.0) / 255.0);
    return s;
}

string normals_tRead( normals_t &value ) {
    string s;
    double fx = (value.nx * 2 - 255.0 ) / 255.0;
    double fy = (value.ny * 2 - 255.0 ) / 255.0;
    double fz = (value.nz * 2 - 255.0 ) / 255.0;
    float nrm = Sqrt(fx*fx + fy*fy + fz*fz);
    if (nrm != 0.0)
        SPrintf(s, "nx: %f, ny: %f, nz: %f", fx/nrm, fy/nrm, fz/nrm);
    else
        SPrintf(s, "nx: %f, ny: %f, nz: %f", fx, fy, fz);
    return s;
}

LittleEndian();
char id[4] <hidden=true>;
Assert( Memcmp("WMB3", id, 4) == 0, "Wrong file type");
FSeek(0);
#include "Nier Automata wmb base.bt"